---

- hosts: "mysql:&mysql_master:&{{env}}"
  tasks:
    - name: create temporary backup directory on master
      tempfile:
        path: /home/admin
        state: directory
        prefix: ansible-
        suffix: .mysqlslave
      register: backupdir

#    - name: list database from master
#      become: yes
#      become_method: sudo
#      become_flags: '-i'
#      become_user: mysql
#      shell: >-
#        mysql -Bs -e 'show\ databases;' | egrep -v "Database|information_schema|climplus|mysql|performance_schema|^sys$" | xargs
#      register: listbackup
      #failed_when: '"completed OK!" not in listbackup.stdout'

#    - debug:
#        msg: "{{listbackup.stdout}}"
        
    - name: dump database from master
      shell: >-
        sudo mysqldump --skip-lock-tables --single-transaction --flush-logs --hex-blob --master-data=2  --events --triggers --routines -Q --databases asturienne bphilibert brossette bzhmx cbamx cdlelec cedeo climwtf decoceram dispano dispart pointp pptp sfic wtf  | gzip > {{ backupdir.path }}/drupal-all.sql.gz 2>&1 | tail -n 1
      register: dumpdatabase
      #failed_when: '"completed OK!" not in dumpdatabase.stdout'
  
    - debug:
        msg: "{{dumpdatabase.stdout}}"

    - name: apply log to database dump
      shell: >-
        zgrep MASTER_LOG_POS drupal-all.sql.gz 2>&1 | tail -n 1
      register: apply_log
      failed_when: '"completed OK!" not in apply_log.stdout'
 
     - name: get binlog file from database dump
      command: >-
        sed -r 's/^(.*)\s[0-9]+$/\1/'
        /var/lib/mysql/xtrabackup_binlog_pos_innodb
      args:
        warn: false
      register: binlog_file

    - name: get binlog position
      command: >-
        sed -r 's/^.*\s([0-9]+)$/\1/'
        /var/lib/mysql/xtrabackup_binlog_pos_innodb
      args:
        warn: false
      register: binlog_position
 
    - name: create temporary directory on localhost
      delegate_to: mysql_slave
      tempfile:
        state: directory
        prefix: ansible-
        suffix: .mysqlslave
      register: local_tmp
    - name: download database dump from master
      fetch:
        src: "{{ backupdir.path }}/dump.tar.gz"
        dest: "{{ local_tmp.path }}/"
        flat: true
    - name: remove database dump from master
      file:
        path: "{{ backupdir.path }}"
        state: absent

- hosts: "mysql:&mysql_slave:&{{env}}"
  tasks:
    - name: stop MySQL on slave
      service:
        name: mysql
        state: stopped
    - name: delete slave data
      file:
        path: /var/lib/mysql
        state: absent
    - name: create /var/lib/mysql
      file:
        path: /var/lib/mysql
        state: directory
        owner: mysql
        group: mysql
        mode: 0750
    - name: uncompress database dump
      unarchive:
        src: "{{ hostvars[mysql_master].backupdir.path }}/dump.tar.gz"
        dest: /var/lib/mysql
        owner: mysql
        group: mysql
    - name: start MySQL on slave
      service:
        name: mysql
        state: started
 
    - name: configure MySQL slave process
      mysql_replication:
        master_host: "{{ mysql_replication_master | default(master) }}"
        master_user: "{{ mysql_replication_user }}"
        master_password: "{{ mysql_replication_password }}"
        master_log_file: "{{ binlog_file.stdout }}"
        master_log_pos: "{{ binlog_position.stdout }}"
        master_ssl: 1
        master_ssl_capath: /etc/ssl/certs
        mode: changemaster
    - name: start MySQL slave process
      mysql_replication:
        mode: startslave
    - name: remove database dump from localhost
      delegate_to: localhost
      file:
        path: "{{ hostvars[master].local_tmp.path }}"
        state: absent
